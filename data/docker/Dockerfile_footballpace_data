# Based on: https://github.com/astral-sh/uv-docker-example/blob/main/multistage.Dockerfile

# First, build the application in the `/opt/dagster/app` directory.
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS builder
ENV UV_COMPILE_BYTECODE=1 UV_LINK_MODE=copy UV_PYTHON_DOWNLOADS=0

WORKDIR /opt/dagster/app
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev --extra docker
ADD . /opt/dagster/app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev --extra docker

# Then, use a final image without uv
FROM python:3.12-slim-bookworm
COPY --from=builder /opt/dagster/app /opt/dagster/app
ENV PATH="/opt/dagster/app/.venv/bin:$PATH"

WORKDIR /opt/dagster/app

EXPOSE 4000

CMD ["dagster", "api", "grpc", "-h", "0.0.0.0", "-p", "4000", "-m", "footballpace.definitions"]